-- Made by Soul
-- Version: 1

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Aimbot = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Toggle = Instance.new("TextButton")
local ToggleFov = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")

-- Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Aimbot.Name = "Aimbot"
Aimbot.Parent = ScreenGui
Aimbot.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Aimbot.Position = UDim2.new(0.0599842146, 0, 0.358722359, 0)
Aimbot.Size = UDim2.new(0, 150, 0, 180)

UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = Aimbot

UIStroke.Thickness = 2
UIStroke.Color = Color3.fromRGB(60, 60, 60)
UIStroke.Parent = Aimbot

Title.Name = "Title"
Title.Parent = Aimbot
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.Size = UDim2.new(0, 150, 0, 40)
Title.Font = Enum.Font.GothamBold
Title.Text = "Aimbot (Made by Soul)"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14

Toggle.Name = "Toggle"
Toggle.Parent = Aimbot
Toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0, 0, 0.222, 0)
Toggle.Size = UDim2.new(0, 150, 0, 50)
Toggle.Font = Enum.Font.GothamBold
Toggle.Text = "Off"
Toggle.TextColor3 = Color3.fromRGB(255, 0, 0)
Toggle.TextSize = 20

UICorner:Clone().Parent = Toggle

ToggleFov.Name = "ToggleFov"
ToggleFov.Parent = Aimbot
ToggleFov.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleFov.BorderSizePixel = 0
ToggleFov.Position = UDim2.new(0, 0, 0.555, 0)
ToggleFov.Size = UDim2.new(0, 150, 0, 50)
ToggleFov.Font = Enum.Font.GothamBold
ToggleFov.Text = "FOV Off"
ToggleFov.TextColor3 = Color3.fromRGB(255, 0, 0)
ToggleFov.TextSize = 20

UICorner:Clone().Parent = ToggleFov

-- Scripts:

local function PNHLOYF_fake_script() -- Toggle.LocalScript
	local script = Instance.new('LocalScript', Toggle)

	_G.aimbot = false
	local camera = game.Workspace.CurrentCamera
	local localplayer = game:GetService("Players").LocalPlayer
	local mouse = localplayer:GetMouse()

	-- FOV Settings
	getgenv().Settings = { Fov = 40, FovCircle = true, Hitbox = "Head" }

	local function GetClosest(Fov)
		local Target, Closest = nil, math.huge
		
		for _, v in pairs(game:GetService("Players"):GetPlayers()) do
			if v ~= localplayer and v.Character and v.Character:FindFirstChild(getgenv().Settings.Hitbox) and v.Character.Humanoid.Health > 0 then
				local ScreenPos, OnScreen = camera:WorldToScreenPoint(v.Character[getgenv().Settings.Hitbox].Position)
				local Distance = (Vector2.new(ScreenPos.X, ScreenPos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
				
				if Distance < Fov and Distance < Closest then
					Closest = Distance
					Target = v
				end
			end
		end
		
		return Target
	end

	local targetPlayer = nil -- Variable to keep track of the current target

	local CircleInline = Drawing.new("Circle")
	local CircleOutline = Drawing.new("Circle")
	
	game:GetService("RunService").Stepped:Connect(function()
		CircleInline.Radius = getgenv().Settings.Fov
		CircleInline.Thickness = 2
		CircleInline.Position = Vector2.new(mouse.X, mouse.Y + 36)
		CircleInline.Transparency = 1
		CircleInline.Color = Color3.fromRGB(255, 255, 255)
		CircleInline.Visible = getgenv().Settings.FovCircle
		CircleInline.ZIndex = 2
	
		CircleOutline.Radius = getgenv().Settings.Fov
		CircleOutline.Thickness = 4
		CircleOutline.Position = Vector2.new(mouse.X, mouse.Y + 36)
		CircleOutline.Transparency = 1
		CircleOutline.Color = Color3.new()
		CircleOutline.Visible = getgenv().Settings.FovCircle
		CircleOutline.ZIndex = 1
	end)

	script.Parent.MouseButton1Click:Connect(function()
		if _G.aimbot then
			_G.aimbot = false
			script.Parent.TextColor3 = Color3.fromRGB(255, 0, 0)
			script.Parent.Text = "Off"
			targetPlayer = nil -- Clear the current target when the aimbot is turned off
		else
			_G.aimbot = true
			script.Parent.TextColor3 = Color3.fromRGB(0, 170, 0)
			script.Parent.Text = "On"
		end
	end)
	
	local settings = {
		keybind = Enum.UserInputType.MouseButton2
	}
	
	local UIS = game:GetService("UserInputService")
	local aiming = false
	
	UIS.InputBegan:Connect(function(inp)
		if inp.UserInputType == settings.keybind then
			aiming = true
			-- Set the target when starting to aim
			if _G.aimbot then
				targetPlayer = GetClosest(getgenv().Settings.Fov)
			end
		end
	end)
	
	UIS.InputEnded:Connect(function(inp)
		if inp.UserInputType == settings.keybind then
			aiming = false
			-- Clear the target when stopping to aim
			targetPlayer = nil
		end
	end)
	
	game:GetService("RunService").RenderStepped:Connect(function()
		if aiming and _G.aimbot and targetPlayer then
			if targetPlayer.Character and targetPlayer.Character:FindFirstChild(getgenv().Settings.Hitbox) then
				camera.CFrame = CFrame.new(camera.CFrame.Position, targetPlayer.Character[getgenv().Settings.Hitbox].Position)
			else
				-- If the target is no longer valid, find a new target
				targetPlayer = GetClosest(getgenv().Settings.Fov)
			end
		end
	end)
end

local function ToggleFovScript() -- ToggleFov.LocalScript
	local script = Instance.new('LocalScript', ToggleFov)
	
	script.Parent.MouseButton1Click:Connect(function()
		if getgenv().Settings.FovCircle then
			getgenv().Settings.FovCircle = false
			script.Parent.TextColor3 = Color3.fromRGB(255, 0, 0)
			script.Parent.Text = "FOV Off"
		else
			getgenv().Settings.FovCircle = true
			script.Parent.TextColor3 = Color3.fromRGB(0, 170, 0)
			script.Parent.Text = "FOV On"
		end
	end)
end

coroutine.wrap(PNHLOYF_fake_script)()
coroutine.wrap(ToggleFovScript)()
